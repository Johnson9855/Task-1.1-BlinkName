// Define the pins for LED output
const int LED_PIN = 13; // Use pin 13 for LED output

void setup() {
  pinMode(LED_PIN, OUTPUT); // Set the LED pin as output
  Serial.begin(9600); // Initialize serial communication at 9600 baud
}

void loop() {
  // Define Morse code for each letter in "JOHNSON"
  char morseCode[] = {'J', 'O', 'H', 'N', 'S', 'O', 'N'};
  
  for (int i = 0; i < 7; i++) {
    char letter = morseCode[i];
    switch (letter) {
      case 'A':
      case 'a':
        dot(); dash(); break;
      case 'B':
      case 'b':
        dash(); dot(); dot(); dot(); break;
      case 'C':
      case 'c':
        dash(); dot(); dash(); dot(); break;
      case 'D':
      case 'd':
        dash(); dot(); dot(); break;
      case 'E':
      case 'e':
        dot(); break;
      case 'F':
      case 'f':
        dot(); dot(); dash(); dot(); break;
      case 'G':
      case 'g':
        dash(); dash(); dot(); break;
      case 'H':
      case 'h':
        dot(); dot(); dot(); dot(); break;
      case 'I':
      case 'i':
        dot(); dot(); break;
      case 'J':
      case 'j':
        dot(); dash(); dash(); dash(); break;
      case 'K':
      case 'k':
        dash(); dot(); dash(); break;
      case 'L':
      case 'l':
        dot(); dash(); dot(); dot(); break;
      case 'M':
      case 'm':
        dash(); dash(); break;
      case 'N':
      case 'n':
        dash(); dot(); break;
      case 'O':
      case 'o':
        dash(); dash(); dash(); break;
      case 'P':
      case 'p':
        dot(); dash(); dash(); dot(); break;
      case 'Q':
      case 'q':
        dash(); dash(); dot(); dash(); break;
      case 'R':
      case 'r':
        dot(); dash(); dot(); break;
      case 'S':
      case 's':
        dot(); dot(); dot(); break;
      case 'T':
      case 't':
        dash(); break;
      case 'U':
      case 'u':
        dot(); dot(); dash(); break;
      case 'V':
      case 'v':
        dot(); dot(); dot(); dash(); break;
      case 'W':
      case 'w':
        dot(); dash(); dash(); break;
      case 'X':
      case 'x':
        dash(); dot(); dot(); dash(); break;
      case 'Y':
      case 'y':
        dash(); dot(); dash(); dash(); break;
      case 'Z':
      case 'z':
        dash(); dash(); dot(); dot(); break;
      default:
        Serial.println("Invalid input!"); return;
    }
    
    // Add a delay between letters
    if (i < 6)
      delay(3000); // 3 seconds delay between letters
  }
}

// Function to represent a dot in Morse code
void dot() {
  digitalWrite(LED_PIN, HIGH); // Turn on the LED
  delay(1000); // Delay for a dot
  digitalWrite(LED_PIN, LOW); // Turn off the LED
  delay(1000); // Delay to separate dots and dashes
}

// Function to represent a dash in Morse code
void dash() {
  digitalWrite(LED_PIN, HIGH); // Turn on the LED
  delay(2000); // Delay for a dash
  digitalWrite(LED_PIN, LOW); // Turn off the LED
  delay(1000); // Delay to separate dots and dashes
}

